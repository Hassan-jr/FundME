{
  "address": "0xc67ba134756e0a23210D6A3bb1F757baFd088Dc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddres",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x00ed06353574cc421ef1964dfb56334fc8066c62b35721d81901cd3334eaf064",
  "receipt": {
    "to": null,
    "from": "0x8a92D9e123b95286F8245dFaD53C3F9E54c6A340",
    "contractAddress": "0xc67ba134756e0a23210D6A3bb1F757baFd088Dc9",
    "transactionIndex": 10,
    "gasUsed": "896430",
    "logsBloom": "0x
    "blockHash": "0x33d3990e337627dc2746f8da9960ab96fbd64637450ce9b1604a47d49e23683b",
    "transactionHash": "0x00ed06353574cc421ef1964dfb56334fc8066c62b35721d81901cd3334eaf064",
    "logs": [],
    "blockNumber": 10940868,
    "cumulativeGasUsed": "1623873",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "4347d44d32a74ee8bd14abeae2e1722e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddres\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public  immutable  i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    AggregatorV3Interface public s_priceFeed;\\n\\n    constructor(address priceFeedAddres) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddres);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public payable onlyOwner  {\\n        address[] memory funders = s_funders;\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n   \\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\",\"keccak256\":\"0x36ed0c1a4e46503f61c10655113c94264a4218e775392d70a51d3257d122aa67\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xd22ffc73f867bf3409f007a7c91fbe433506d3dde29ca7e95205cae644d06527\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051620010383803806200103883398181016040528101906100349190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b608051610ed6620001626000396000818161031601526106060152610ed66000f3fe6080604052600436106100745760003560e01c806354861af71161004e57806354861af7146100ff5780636b69a5921461013c578063b60d428814610167578063dba6335f1461017157610083565b80630ec3b0271461008d5780631bf6132d146100b85780633ccfd60b146100f557610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100a26102d6565b6040516100af919061082a565b60405180910390f35b3480156100c457600080fd5b506100df60048036038101906100da9190610888565b6102fc565b6040516100ec91906108ce565b60405180910390f35b6100fd610314565b005b34801561010b57600080fd5b5061012660048036038101906101219190610915565b6105b8565b6040516101339190610951565b60405180910390f35b34801561014857600080fd5b506101516105f7565b60405161015e91906108ce565b60405180910390f35b61016f61019c565b005b34801561017d57600080fd5b50610186610604565b6040516101939190610951565b60405180910390f35b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461062890919063ffffffff16565b101561021c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610213906109c9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026a9190610a18565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610399576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561041d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d3575b5050505050905060005b81518110156104a757600082828151811061044557610444610a6e565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049f90610a9d565b915050610427565b50600067ffffffffffffffff8111156104c3576104c2610ae6565b5b6040519080825280602002602001820160405280156104f15781602001602082028036833780820191505090505b5060019080519060200190610507929190610704565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052e90610b46565b60006040518083038185875af1925050503d806000811461056b576040519150601f19603f3d011682016040523d82523d6000602084013e610570565b606091505b50509050806105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90610ba7565b60405180910390fd5b5050565b600181815481106105c857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061063483610664565b90506000670de0b6b3a7640000858361064d9190610bc7565b6106579190610c50565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106ad57600080fd5b505afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e59190610d0e565b5050509150506402540be400816106fc9190610d89565b915050919050565b82805482825590600052602060002090810192821561077d579160200282015b8281111561077c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610724565b5b50905061078a919061078e565b5090565b5b808211156107a757600081600090555060010161078f565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107f06107eb6107e6846107ab565b6107cb565b6107ab565b9050919050565b6000610802826107d5565b9050919050565b6000610814826107f7565b9050919050565b61082481610809565b82525050565b600060208201905061083f600083018461081b565b92915050565b600080fd5b6000610855826107ab565b9050919050565b6108658161084a565b811461087057600080fd5b50565b6000813590506108828161085c565b92915050565b60006020828403121561089e5761089d610845565b5b60006108ac84828501610873565b91505092915050565b6000819050919050565b6108c8816108b5565b82525050565b60006020820190506108e360008301846108bf565b92915050565b6108f2816108b5565b81146108fd57600080fd5b50565b60008135905061090f816108e9565b92915050565b60006020828403121561092b5761092a610845565b5b600061093984828501610900565b91505092915050565b61094b8161084a565b82525050565b60006020820190506109666000830184610942565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109b3601b8361096c565b91506109be8261097d565b602082019050919050565b600060208201905081810360008301526109e2816109a6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a23826108b5565b9150610a2e836108b5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a6357610a626109e9565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610aa8826108b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610adb57610ada6109e9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b30600083610b15565b9150610b3b82610b20565b600082019050919050565b6000610b5182610b23565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b91600b8361096c565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b6000610bd2826108b5565b9150610bdd836108b5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1657610c156109e9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c5b826108b5565b9150610c66836108b5565b925082610c7657610c75610c21565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ca081610c81565b8114610cab57600080fd5b50565b600081519050610cbd81610c97565b92915050565b6000819050919050565b610cd681610cc3565b8114610ce157600080fd5b50565b600081519050610cf381610ccd565b92915050565b600081519050610d08816108e9565b92915050565b600080600080600060a08688031215610d2a57610d29610845565b5b6000610d3888828901610cae565b9550506020610d4988828901610ce4565b9450506040610d5a88828901610cf9565b9350506060610d6b88828901610cf9565b9250506080610d7c88828901610cae565b9150509295509295909350565b6000610d9482610cc3565b9150610d9f83610cc3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dde57610ddd6109e9565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e1b57610e1a6109e9565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e5857610e576109e9565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e9557610e946109e9565b5b82820290509291505056fea2646970667358221220dfe4ea2e7ace8cd334de7a94255a5385007f9f24d30242d661533394786ec0e964736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c806354861af71161004e57806354861af7146100ff5780636b69a5921461013c578063b60d428814610167578063dba6335f1461017157610083565b80630ec3b0271461008d5780631bf6132d146100b85780633ccfd60b146100f557610083565b366100835761008161019c565b005b61008b61019c565b005b34801561009957600080fd5b506100a26102d6565b6040516100af919061082a565b60405180910390f35b3480156100c457600080fd5b506100df60048036038101906100da9190610888565b6102fc565b6040516100ec91906108ce565b60405180910390f35b6100fd610314565b005b34801561010b57600080fd5b5061012660048036038101906101219190610915565b6105b8565b6040516101339190610951565b60405180910390f35b34801561014857600080fd5b506101516105f7565b60405161015e91906108ce565b60405180910390f35b61016f61019c565b005b34801561017d57600080fd5b50610186610604565b6040516101939190610951565b60405180910390f35b6802b5e3af16b18800006101db600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461062890919063ffffffff16565b101561021c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610213906109c9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026a9190610a18565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610399576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561041d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103d3575b5050505050905060005b81518110156104a757600082828151811061044557610444610a6e565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049f90610a9d565b915050610427565b50600067ffffffffffffffff8111156104c3576104c2610ae6565b5b6040519080825280602002602001820160405280156104f15781602001602082028036833780820191505090505b5060019080519060200190610507929190610704565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052e90610b46565b60006040518083038185875af1925050503d806000811461056b576040519150601f19603f3d011682016040523d82523d6000602084013e610570565b606091505b50509050806105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90610ba7565b60405180910390fd5b5050565b600181815481106105c857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008061063483610664565b90506000670de0b6b3a7640000858361064d9190610bc7565b6106579190610c50565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106ad57600080fd5b505afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e59190610d0e565b5050509150506402540be400816106fc9190610d89565b915050919050565b82805482825590600052602060002090810192821561077d579160200282015b8281111561077c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610724565b5b50905061078a919061078e565b5090565b5b808211156107a757600081600090555060010161078f565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107f06107eb6107e6846107ab565b6107cb565b6107ab565b9050919050565b6000610802826107d5565b9050919050565b6000610814826107f7565b9050919050565b61082481610809565b82525050565b600060208201905061083f600083018461081b565b92915050565b600080fd5b6000610855826107ab565b9050919050565b6108658161084a565b811461087057600080fd5b50565b6000813590506108828161085c565b92915050565b60006020828403121561089e5761089d610845565b5b60006108ac84828501610873565b91505092915050565b6000819050919050565b6108c8816108b5565b82525050565b60006020820190506108e360008301846108bf565b92915050565b6108f2816108b5565b81146108fd57600080fd5b50565b60008135905061090f816108e9565b92915050565b60006020828403121561092b5761092a610845565b5b600061093984828501610900565b91505092915050565b61094b8161084a565b82525050565b60006020820190506109666000830184610942565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109b3601b8361096c565b91506109be8261097d565b602082019050919050565b600060208201905081810360008301526109e2816109a6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a23826108b5565b9150610a2e836108b5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a6357610a626109e9565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610aa8826108b5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610adb57610ada6109e9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b30600083610b15565b9150610b3b82610b20565b600082019050919050565b6000610b5182610b23565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b91600b8361096c565b9150610b9c82610b5b565b602082019050919050565b60006020820190508181036000830152610bc081610b84565b9050919050565b6000610bd2826108b5565b9150610bdd836108b5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1657610c156109e9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c5b826108b5565b9150610c66836108b5565b925082610c7657610c75610c21565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ca081610c81565b8114610cab57600080fd5b50565b600081519050610cbd81610c97565b92915050565b6000819050919050565b610cd681610cc3565b8114610ce157600080fd5b50565b600081519050610cf381610ccd565b92915050565b600081519050610d08816108e9565b92915050565b600080600080600060a08688031215610d2a57610d29610845565b5b6000610d3888828901610cae565b9550506020610d4988828901610ce4565b9450506040610d5a88828901610cf9565b9350506060610d6b88828901610cf9565b9250506080610d7c88828901610cae565b9150509295509295909350565b6000610d9482610cc3565b9150610d9f83610cc3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dde57610ddd6109e9565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e1b57610e1a6109e9565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e5857610e576109e9565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e9557610e946109e9565b5b82820290509291505056fea2646970667358221220dfe4ea2e7ace8cd334de7a94255a5385007f9f24d30242d661533394786ec0e964736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}